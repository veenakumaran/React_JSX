{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","veena","ReactDOM","render","style","backgroundColor","document","getElementById"],"mappings":"6IAAe,I,WCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCqEVQ,EACO,QAKXC,IAASC,OACL,gCACC,uBACA,oBAAIC,MAAQ,CAAEC,gBAAkB,SAAhC,8BACA,uCAAUJ,KAEV,wCAAWA,EAAX,UAEAK,SAASC,eAAe,SA+B7Bf,K","file":"static/js/main.63493264.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//JSX is basically --> adding HTML to JS\n\n// { } is used to enclose any JS variable / JS expression / property / JS object\n\n//. RENDER FUNCTION CAN Take only 2 arguments\n\n//RENDERING HTML DIRECTLY \n\n//CASE 1 : rendering html elements directly in JS\n// ReactDOM.render(\n//   <h1>My Webpage</h1>,\n//   document.getElementById('root')\n// );\n\n//CASE 2 : rendering html elements directly in JS, with JS variables and objects\n// var name = 'veena';\n// var age = 10;\n\n// var obj =\n// {\n//    name : 'veena',\n//    age : 10,\n// }\n\n// ReactDOM.render(\n//   <div>\n//   <h1>My Webpage</h1>\n//    {/* <p> Using variables : my name is {name}  and my age is {age} years</p>  */}\n//   <p> Using Objects : my name is  {obj.name} and age is {obj.age}</p>\n//   </div>,\n//   document.getElementById('root')\n// );\n\n\n\n//RENDERING HTML INDIRECTLY \n\n// CASE 1 : through variables as elements \n// var element = <div><h1>My Webpage</h1><p>hi there........</p></div>\n\n// ReactDOM.render(\n//   element,                       //cannot render multiple elements to one tag\n//   document.getElementById('root')\n// );\n\n//CASE 2: through components\n// class Compo extends React.Component\n// {\n//   render()\n//   {\n//     return(\n\n//       <div><h1>My webpage</h1><p>hi there...LETS LEARN REACT</p></div>\n\n//     )\n//   }\n// }\n\n// ReactDOM.render(\n//   <Compo/>,                    //cannot render multiple components to one tag\n//   document.getElementById('root')\n// );\n\n\nvar name  = 'xyz';\nvar age = 10;\nvar booleanvalue = 'true'\n\n\n\nvar veena ={\n    name : 'veena',\n    age : 10\n\n}\n\nReactDOM.render(\n    <div>\n     <br></br>\n     <h1 style ={{ backgroundColor : 'green'}}>   My Webpage   </h1>\n     <p>hello {veena.name}</p> \n\n     <p> hello {veena.name} </p>\n     </div>,\n     document.getElementById('root')\n    \n    )\n\n\n// ReactDOM.render(\n// <div>\n//  <br></br>\n//  <h1 style ={{ backgroundColor : 'red'}}>My Webpage</h1>,\n//  </div>,\n\n//  document.getElementById('notroot')\n\n// )\n\n\n\n\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}